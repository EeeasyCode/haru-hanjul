version: '3'
services:
  proxy:
    depends_on:
        - haru
    image: nginx:latest   # 최신 버전의 Nginx 사용
    container_name: proxy # container 이름은 proxy
    ports: 
      - "80:80"           # 80번 포트를 host와 container 맵핑
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf # nginx 설정 파일 volume 맵핑
    restart: "unless-stopped" # 내부에서 에러로 인해 container가 죽을 경우 restart
    networks:
    - haru-app

  haru:
    depends_on:
      - database
    build:
      context: ./server  # 빌드할 Dockerfile이 위치한 경로
    container_name: haru
    command: bash -c 'while !</dev/tcp/db/3306; do sleep 1; done; npm start'
    expose:
      - "3000"           # 다른 컨테이너에게 3000번 포트 open
    volumes:
      - ./server:/source # host <-> container의 source 디렉토리를 공유
      - /source/node_modules 
    restart: "unless-stopped"
    networks:
    - haru-app

  database:
    
    image: mysql:latest
    # 컨테이너명 설정
    container_name: haru-db
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)    
    ports:
      - "3306:3306"
    # 환경 변수 설정
    environment:
        MYSQL_ROOT_PASSWORD: 
        MYSQL_DATABASE: haru-hanhul-dev
        TZ: Asia/Seoul
    # 명렬어 설정
    command:
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_unicode_ci
    # 볼륨 설정
    volumes:
        - ./db/mysql/:/var/lib/mysql
    restart: "unless-stopped"
    
    networks:
      - haru-app

networks: 
  haru-app:
    driver: bridge
